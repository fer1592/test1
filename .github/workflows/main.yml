name: Testing and Deploy Piepeline
on:
  push:
  pull_request:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: install terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: "1.16"
      
      - name: Launch tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd test/
          go test terraform_test.go

  prod-deployment:
    needs: test
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2

      - name: install terraform
        uses: hashicorp/setup-terraform@v1

      - name: deploy resources using terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd IaC/
          sed -i 's/^terraform {/&\n  backend "s3" {}/' test-1.tf
          terraform init -reconfigure \
            -backend-config="bucket=${{ secrets.BUCKET }}" \
            -backend-config="key=${{ secrets.KEY }}"
          terraform apply -var='bucketName=${{ secrets.BUCKET_NAME }}' -auto-approve